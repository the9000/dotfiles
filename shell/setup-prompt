# should be sourced by bash
# prompt tweaks

source colors.sh

# TODO: do everything within one function that prints PS1, to keep namespace clean.

pcolor() {
    # Same as color(), but adds \[ and \] to make the color setting prompt-transparent.
    echo -n '\['$(color $*)'\]'
}


d_exitcode() {
    # dynamically sets background color depending on $?
    local zero_bg=$(hl_color 22 green)
    local nonzero_bg='red'
    local fg=$(hl_color 'yellow' 'black') # optional foreground color
    #
    local zattr="$(pcolor $fg on $zero_bg)"
    local nonzattr="$(pcolor $fg on $nonzero_bg)"
    echo -n '$(N=$?;[ $N -ne 0 ] && echo -n "'${nonzattr}' <$N>" || echo -n "'${zattr}'")'
}

p_host() {
    local normal_fg='gray'       # default host name color
    local special_fg=$(hl_color 148 'cyan')
    local bg=$(hl_color 22 'blue') # background
    #
    local fg
    local underline=''
    local underline_off_code=''
    host_part=$(hostname)
    if [[ ${host_part} =~ corp\.google\.com ]]; then
        fg=${special_fg}
    else
        fg=${normal_fg}
    fi
    if [ -n "$SSH_CLIENT" ]; then
        underline='underline'
        underline_off_code="$(pcolor no_underline)"
    fi
    printf "$(pcolor $fg on $bg $underline) ${host_part}${underline_off_code}"
}

prompt_colors()
# sets C_ACCESS, C_SUPER, C_TITLE, C_NOCOLOR to esc sequences if xterm
# else sets them to empty values
{
if [ $(tput colors) -ge 8 ]; then
   C_ACCESS="\[\033[1;37m\]" # white by default
   C_NOCOLOR="\[\033[0m\]"
   if [ -n "$SSH_CLIENT" ]; then
     C_ACCESS="\[\033[1;32m\]" # green is SSH
   else
     C_ACCESS="\[\033[0;37m\]" # gray is non-ssh
   fi
   if [ "$(id -u)" = "0" ]; then
     C_USER="\[\033[1;31m\]" # red is root
   else
     C_USER="\[\033[1;32m\]" # green is non-root
   fi
   git_branch_cmd='$(git branch 2>/dev/null|grep -e ^* | tr -d "\* ")'
   if [ "$TMUX" ]; then
       C_TITLE='\[\e]0;\w |'${git_branch_cmd}'\a\]'
   else
       C_TITLE='\[\e]0;\u@\H:\w |'${git_branch_cmd}'\a\]'
   fi
   if [ $TERM == 'linux' ] || [ $TERM == 'cons25' ]; then 
       # consoles don't support title
       C_TITLE=""
   fi
   #export PS1="$NOCOLOR\u@$HOST_PRE\h$NOCOLOR:\W$PRE\\$ $NOCOLOR"
   #export PS2="${PRE}> $NOCOLOR"
else
  # TODO: support 4-color withbold, too
   C_NOCOLOR=""
   C_ACCESS=""
   C_USER=""
   C_TITLE=""
fi
}

host_part=$(hostname | head -c 7)
time_part='$(date +"%H:%M")'
prompt_colors

# example: PS1="$(d_exitcode) $(t) $(p_host) $(pcolor none)\n\$ "

unset host_part time_part

