[user]
    name = Dmitry Cheryasov
    email = dmitry@clicktherapeutics.com
[color]
    filemode = false
    diff = auto
    status = auto
    branch = auto
    pager = true
[color "diff"]
    whitespace = red reverse
[alias]
    b = branch
    ci = commit -v
    co = checkout
    cob = checkout -b
    d = diff
    l = lgom  # Used more often than raw log.
    lg = log --graph --pretty=format:'%C(green)%h%Creset -%C(cyan)%d%Creset %s %Cgreen(%cr) %C(yellow)<%an>%Creset' --abbrev-commit --date=relative
    lga = log --graph --pretty=format:'%C(green)%h%Creset -%C(cyan)%d%Creset %s %Cgreen(%cr) %C(yellow)<%an>%Creset' --abbrev-commit --date=relative --branches
    lg5 = "!git lg -n 5"
    lgom = "!git lg origin/master^1.." # Log commits up until and including origin/master.
    st = status
    fixup = !sh -c 'git commit -a -m \"fixup! $(git log -1 --format='%s' $@)\"' -
    squ = !sh -c 'git commit -a -m \"squash! $(git log -1 --format='%s' $@)\"' -
    ri = rebase --interactive
    rc = rebase --continue
    push-review = push origin HEAD:refs/for/master
    last = log -p -n 1
    last5 = log -p -n 5
    lst = log -p -n 1 --name-only
    lst5 = log -p -n 5 --name-only
    unadd = reset
    unstage = rm --cached
    prom = pull --rebase origin master
    pwd = rev-parse --show-toplevel
    cp = cherry-pick
    cpx = cherry-pick -x
    shon = show --oneline --name-only
    feap = fetch --all --prune
    wt = worktree
    # WTB: worktree branch.
    # git wtb foobar  # creates branch foobar off master in worktree ../foobar
    # git wtb foobar some-branch  # creates branch foobar off some-branch in worktree ../foobar
    wtb = "!f() { local git_pwd=$(git rev-parse --show-toplevel); git worktree add -b dc-$1 ${git_pwd}.$1 ${2:-master};}; f"
    # fo = ferch origin, analogous to pull without checking the branch out.
    fo = !sh -c 'git fetch origin $1:$1' -
    # nb = 'new branch' on top of freshly fetched master.
    nb = !sh -c 'git fo master && git co -b $1 master' -
    mdiff = !sh -c 'git diff master:./$1 $1' -
    br = branch
    jira-co = "!f() { b=$1; shift; { git branch && git branch -r ; } | awk -v rpat=^[^/]*/$b -v pat=^$b '$1 ~ pat || $1 ~ rpat { print ; exit ; }' | cut -d/ -f2 | xargs -I{} git co {} $@; }; f"
    committers = shortlog -s -n --all
    # map command to all submodules.
    sub = "submodule foreach git"
[core]
    pager = less -FRSX
    excludesfile = ~/.gitignore
    editor = EE
[gui]
    recentrepo = /home/dcheryasov/work/monitoring
    editor = E

[color "branch"]
    current = green bold
    remote = yellow

[color "status"]
    branch = bold
    added = green bold
    changed = cyan bold
    untracked = yellow dim
    # color of conflicts
    unmerged = magenta bold

[push]
	default = current
[diff]
	tool = meld
[merge]
	tool = meld
[cola]
	fontdiff = DejaVu Sans Mono,11,-1,5,50,0,0,0,0,0
[branch]
	autosetuprebase = always
[github]
	user = dcheryasov@grubhub.com
	oauth-token = 6ed3856d64cea92ebb348213b9e8a2f7a845f851
